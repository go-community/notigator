// Code generated by "enumer -type=Canonical -transform=snake"; DO NOT EDIT.

package source

import (
	"fmt"
)

const _CanonicalName = "githubgitlabtrello"

var _CanonicalIndex = [...]uint8{0, 6, 12, 18}

func (i Canonical) String() string {
	if i < 0 || i >= Canonical(len(_CanonicalIndex)-1) {
		return fmt.Sprintf("Canonical(%d)", i)
	}
	return _CanonicalName[_CanonicalIndex[i]:_CanonicalIndex[i+1]]
}

var _CanonicalValues = []Canonical{0, 1, 2}

var _CanonicalNameToValueMap = map[string]Canonical{
	_CanonicalName[0:6]:   0,
	_CanonicalName[6:12]:  1,
	_CanonicalName[12:18]: 2,
}

// CanonicalString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CanonicalString(s string) (Canonical, error) {
	if val, ok := _CanonicalNameToValueMap[s]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to Canonical values", s)
}

// CanonicalValues returns all values of the enum
func CanonicalValues() []Canonical {
	return _CanonicalValues
}

// IsACanonical returns "true" if the value is listed in the enum definition. "false" otherwise
func (i Canonical) IsACanonical() bool {
	for _, v := range _CanonicalValues {
		if i == v {
			return true
		}
	}
	return false
}
